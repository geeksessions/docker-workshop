version: '2.3'
services:
  mongodb:
    image: mongo:4.0.5
    restart: unless-stopped
    container_name: gsmongodb
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./database/data/db:/data/db
    ports:
      - 27017:27017
    command: mongod --noauth --bind_ip_all --oplogSize 128
    networks:
      - geeksessions-network
  gsfrontend:
    image: gsfrontend_develop
    container_name: gsfrontend_develop
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    volumes:
      - "./frontend/sourcecode:/usr/src/app"
      - "/usr/src/app/node_modules" # TRICK: re-bind to the container internal filesystem: original node_modules folder
    restart: always
    depends_on:
      - mongodb
      - gsbackend
    networks:
      - geeksessions-network
  gsbackend:
    image: gsbackend_develop
    container_name: gsbackend_develop
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    volumes:
      - "./backend/sourcecode:/usr/src/app"
      - "/usr/src/app/node_modules" # TRICK: re-bind to the container internal filesystem: original node_modules folder
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/healthcheck"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
    depends_on:
      - mongodb
    command: sh -c '/wait-for mongodb:27017 -- npm run start:dev'
    networks:
      - geeksessions-network
  # required to restart docker-compose services on healthcheck failure:
  # https://stackoverflow.com/questions/47088261/restarting-an-unhealthy-docker-container-based-on-healthcheck
  autoheal:
    restart: always
    image: willfarrell/autoheal
    container_name: gsautoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - geeksessions-network
networks:
  geeksessions-network:
    driver: bridge